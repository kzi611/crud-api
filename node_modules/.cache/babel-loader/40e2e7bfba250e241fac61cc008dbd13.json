{"ast":null,"code":"var _jsxFileName = \"/Users/donhutkhavy/front-end/src/components/Table.jsx\";\nimport React from 'react';\nimport { useTable } from '@tanstack/react-table';\nconst Table = ({\n  columns,\n  data\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }), row.cells.map(cell => /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }), cell.render('Cell'))));\n  }))));\n};\nexport default Table;","map":{"version":3,"names":["React","useTable","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","assign","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/donhutkhavy/front-end/src/components/Table.jsx"],"sourcesContent":["import React from 'react';\nimport { useTable } from '@tanstack/react-table';\n\nconst Table = ({ columns, data }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <div className=\"p-2\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EACnC,MAAM;IACJC,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGR,QAAQ,CAAC;IACXE,OAAO;IACPC;EACF,CAAC,CAAC;EAEF,oBACEJ,KAAA,CAAAU,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBjB,KAAA,CAAAU,aAAA,UAAAQ,MAAA,CAAAC,MAAA,KAAWd,aAAa,CAAC,CAAC;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBACxBjB,KAAA,CAAAU,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGV,YAAY,CAACa,GAAG,CAAEC,WAAW,iBAC5BrB,KAAA,CAAAU,aAAA,OAAAQ,MAAA,CAAAC,MAAA,KAAQE,WAAW,CAACC,mBAAmB,CAAC,CAAC;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IACtCI,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC9BxB,KAAA,CAAAU,aAAA,OAAAQ,MAAA,CAAAC,MAAA,KAAQK,MAAM,CAACC,cAAc,CAAC,CAAC;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAAGO,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAM,CAC/D,CACC,CACL,CACI,CAAC,eACR1B,KAAA,CAAAU,aAAA,UAAAQ,MAAA,CAAAC,MAAA,KAAWb,iBAAiB,CAAC,CAAC;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAC3BT,IAAI,CAACY,GAAG,CAAEO,GAAG,IAAK;IACjBlB,UAAU,CAACkB,GAAG,CAAC;IACf,oBACE3B,KAAA,CAAAU,aAAA,OAAAQ,MAAA,CAAAC,MAAA,KAAQQ,GAAG,CAACC,WAAW,CAAC,CAAC;MAAAhB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IACtBU,GAAG,CAACE,KAAK,CAACT,GAAG,CAAEU,IAAI,iBAClB9B,KAAA,CAAAU,aAAA,OAAAQ,MAAA,CAAAC,MAAA,KAAQW,IAAI,CAACC,YAAY,CAAC,CAAC;MAAAnB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAAGa,IAAI,CAACJ,MAAM,CAAC,MAAM,CAAM,CACvD,CACC,CAAC;EAET,CAAC,CACI,CACF,CACJ,CAAC;AAEV,CAAC;AAED,eAAexB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}