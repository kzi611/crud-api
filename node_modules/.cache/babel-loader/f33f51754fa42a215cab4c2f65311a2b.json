{"ast":null,"code":"var _jsxFileName = \"/Users/donhutkhavy/front-end/src/components/Table.jsx\";\nimport React from 'react';\nimport { useReactTable } from '@tanstack/react-table';\nconst Table = () => {\n  const data = [{\n    id: 1,\n    name: 'John',\n    phone: '123-456-7890',\n    email: 'john.doe@example.com',\n    status: 'Active',\n    action: 'Edit'\n  }, {\n    id: 2,\n    name: 'Jane',\n    phone: '987-654-3210',\n    email: 'jane.smith@example.com',\n    status: 'Inactive',\n    action: 'Delete'\n  }, {\n    id: 3,\n    name: 'Michael',\n    phone: '555-123-4567',\n    email: 'michael.johnson@example.com',\n    status: 'Active',\n    action: 'Edit'\n  }];\n  const columns = React.useMemo(() => [{\n    Header: 'ID User',\n    accessor: 'id'\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'Phone',\n    accessor: 'phone'\n  }, {\n    Header: 'Email',\n    accessor: 'email'\n  }, {\n    Header: 'Status',\n    accessor: 'status'\n  }, {\n    Header: 'Action',\n    accessor: 'action'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useReactTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), row.cells.map(cell => /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), cell.render('Cell'))));\n  }))));\n};\nexport default Table;","map":{"version":3,"names":["React","useReactTable","Table","data","id","name","phone","email","status","action","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","assign","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/donhutkhavy/front-end/src/components/Table.jsx"],"sourcesContent":["import React from 'react';\nimport { useReactTable } from '@tanstack/react-table';\n\nconst Table = () => {\n  const data = [\n    {\n      id: 1,\n      name: 'John',\n      phone: '123-456-7890',\n      email: 'john.doe@example.com',\n      status: 'Active',\n      action: 'Edit',\n    },\n    {\n      id: 2,\n      name: 'Jane',\n      phone: '987-654-3210',\n      email: 'jane.smith@example.com',\n      status: 'Inactive',\n      action: 'Delete',\n    },\n    {\n      id: 3,\n      name: 'Michael',\n      phone: '555-123-4567',\n      email: 'michael.johnson@example.com',\n      status: 'Active',\n      action: 'Edit',\n    },\n  ];\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'ID User',\n        accessor: 'id',\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phone',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Action',\n        accessor: 'action',\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useReactTable({\n    columns,\n    data,\n  });\n\n  return (\n    <div className=\"p-2\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}