{"ast":null,"code":"import React from\"react\";import{useReactTable}from\"@tanstack/react-table\";import DATA from\"../data\";const Table=()=>{const data=DATA;const columns=React.useMemo(()=>[{Header:\"ID\",accessor:\"id\"},{Header:\"Name\",accessor:\"name\"},{Header:\"Phone\",accessor:\"phone\"},{Header:\"Email\",accessor:\"email\"},{Header:\"Status\",accessor:\"status\"},{Header:\"Action\",accessor:\"action\"}],[]);const{getTableProps,getTableBodyProps,headerGroups,rows,prepareRow}=useReactTable({columns,data});return/*#__PURE__*/React.createElement(\"table\",Object.assign({},getTableProps(),{style:{border:\"solid 1px blue\"}}),/*#__PURE__*/React.createElement(\"thead\",null,headerGroups.map(headerGroup=>/*#__PURE__*/React.createElement(\"tr\",headerGroup.getHeaderGroupProps(),headerGroup.headers.map(column=>/*#__PURE__*/React.createElement(\"th\",column.getHeaderProps(),column.render(\"Header\")))))),/*#__PURE__*/React.createElement(\"tbody\",getTableBodyProps(),rows.map(row=>{prepareRow(row);return/*#__PURE__*/React.createElement(\"tr\",row.getRowProps(),row.cells.map(cell=>/*#__PURE__*/React.createElement(\"td\",cell.getCellProps(),cell.render(\"Cell\"))));})));};export default Table;","map":{"version":3,"names":["React","useReactTable","DATA","Table","data","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","createElement","Object","assign","style","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/donhutkhavy/front-end/src/components/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport { useReactTable } from \"@tanstack/react-table\";\nimport DATA from \"../data\";\n\nconst Table = () => {\n  const data = DATA;\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Phone\",\n        accessor: \"phone\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Status\",\n        accessor: \"status\",\n      },\n      {\n        Header: \"Action\",\n        accessor: \"action\",\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useReactTable({\n    columns,\n    data,\n  });\n\n  return (\n    <table {...getTableProps()} style={{ border: \"solid 1px blue\" }}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => (\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,KAAQ,uBAAuB,CACrD,MAAO,CAAAC,IAAI,KAAM,SAAS,CAE1B,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAAAC,IAAI,CAAGF,IAAI,CAEjB,KAAM,CAAAG,OAAO,CAAGL,KAAK,CAACM,OAAO,CAC3B,IAAM,CACJ,CACEC,MAAM,CAAE,IAAI,CACZC,QAAQ,CAAE,IACZ,CAAC,CACD,CACED,MAAM,CAAE,MAAM,CACdC,QAAQ,CAAE,MACZ,CAAC,CACD,CACED,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,OACZ,CAAC,CACD,CACED,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,OACZ,CAAC,CACD,CACED,MAAM,CAAE,QAAQ,CAChBC,QAAQ,CAAE,QACZ,CAAC,CACD,CACED,MAAM,CAAE,QAAQ,CAChBC,QAAQ,CAAE,QACZ,CAAC,CACF,CACD,EACF,CAAC,CAED,KAAM,CACJC,aAAa,CACbC,iBAAiB,CACjBC,YAAY,CACZC,IAAI,CACJC,UACF,CAAC,CAAGZ,aAAa,CAAC,CAChBI,OAAO,CACPD,IACF,CAAC,CAAC,CAEF,mBACEJ,KAAA,CAAAc,aAAA,SAAAC,MAAA,CAAAC,MAAA,IAAWP,aAAa,CAAC,CAAC,EAAEQ,KAAK,CAAE,CAAEC,MAAM,CAAE,gBAAiB,CAAE,gBAC9DlB,KAAA,CAAAc,aAAA,cACGH,YAAY,CAACQ,GAAG,CAAEC,WAAW,eAC5BpB,KAAA,CAAAc,aAAA,MAAQM,WAAW,CAACC,mBAAmB,CAAC,CAAC,CACtCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,eAC9BvB,KAAA,CAAAc,aAAA,MAAQS,MAAM,CAACC,cAAc,CAAC,CAAC,CAAGD,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAM,CAC/D,CACC,CACL,CACI,CAAC,cACRzB,KAAA,CAAAc,aAAA,SAAWJ,iBAAiB,CAAC,CAAC,CAC3BE,IAAI,CAACO,GAAG,CAAEO,GAAG,EAAK,CACjBb,UAAU,CAACa,GAAG,CAAC,CACf,mBACE1B,KAAA,CAAAc,aAAA,MAAQY,GAAG,CAACC,WAAW,CAAC,CAAC,CACtBD,GAAG,CAACE,KAAK,CAACT,GAAG,CAAEU,IAAI,eAClB7B,KAAA,CAAAc,aAAA,MAAQe,IAAI,CAACC,YAAY,CAAC,CAAC,CAAGD,IAAI,CAACJ,MAAM,CAAC,MAAM,CAAM,CACvD,CACC,CAAC,CAET,CAAC,CACI,CACF,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAtB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}