{"ast":null,"code":"var _jsxFileName = \"/Users/donhutkhavy/front-end/src/components/Table.jsx\";\nimport { useTable } from 'react-table';\nconst TableComponent = ({\n  columns,\n  data\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render your table component using the above destructured properties\n  return /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), row.cells.map(cell => /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), cell.render('Cell'))));\n  })));\n};\nexport default TableComponent;","map":{"version":3,"names":["useTable","TableComponent","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","React","createElement","Object","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/donhutkhavy/front-end/src/components/Table.jsx"],"sourcesContent":["import { useTable } from 'react-table';\n\nconst TableComponent = ({ columns, data }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  // Render your table component using the above destructured properties\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => (\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default TableComponent;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EAC5C,MAAM;IACJC,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGR,QAAQ,CAAC;IAAEE,OAAO;IAAEC;EAAK,CAAC,CAAC;;EAE/B;EACA,oBACEM,KAAA,CAAAC,aAAA,UAAAC,MAAA,CAAAC,MAAA,KAAWR,aAAa,CAAC,CAAC;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iBACxBT,KAAA,CAAAC,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGZ,YAAY,CAACa,GAAG,CAAEC,WAAW,iBAC5BX,KAAA,CAAAC,aAAA,OAAAC,MAAA,CAAAC,MAAA,KAAQQ,WAAW,CAACC,mBAAmB,CAAC,CAAC;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC9Bd,KAAA,CAAAC,aAAA,OAAAC,MAAA,CAAAC,MAAA,KAAQW,MAAM,CAACC,cAAc,CAAC,CAAC;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAM,CAC/D,CACC,CACL,CACI,CAAC,eACRhB,KAAA,CAAAC,aAAA,UAAAC,MAAA,CAAAC,MAAA,KAAWP,iBAAiB,CAAC,CAAC;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAC3BX,IAAI,CAACY,GAAG,CAAEO,GAAG,IAAK;IACjBlB,UAAU,CAACkB,GAAG,CAAC;IACf,oBACEjB,KAAA,CAAAC,aAAA,OAAAC,MAAA,CAAAC,MAAA,KAAQc,GAAG,CAACC,WAAW,CAAC,CAAC;MAAAd,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IACtBQ,GAAG,CAACE,KAAK,CAACT,GAAG,CAAEU,IAAI,iBAClBpB,KAAA,CAAAC,aAAA,OAAAC,MAAA,CAAAC,MAAA,KAAQiB,IAAI,CAACC,YAAY,CAAC,CAAC;MAAAjB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAAGW,IAAI,CAACJ,MAAM,CAAC,MAAM,CAAM,CACvD,CACC,CAAC;EAET,CAAC,CACI,CACF,CAAC;AAEZ,CAAC;AAED,eAAexB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}